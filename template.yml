AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  ESHost:
    Type: String
    Default: https://search-lebarzoi-e3gc63eez2gmzkriudubinc3sa.us-east-1.es.amazonaws.com/
    Description: ElasticSearch instance

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: 2.0
        basePath: /prod
        info:
          title: Crwody
        paths:
          /projects:
            get:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                # NOTE: ${LambdaFunction} must match the Lambda resourcename
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProjects.Arn}/invocations"
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
            options:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                type: mock
  GetProject:
    Type: AWS::Serverless::Function
    Properties:
      Handler: projectsLambda.get_project_by_id
      Runtime: python3.6
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          ELASTIC_HOST: !Ref ESHost
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /project/{projectId}
            Method: get
  GetProjects:
    Type: AWS::Serverless::Function
    Properties:
      Handler: projectsLambda.get_projects
      Runtime: python3.6
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          ELASTIC_HOST: !Ref ESHost
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /projects
            Method: get
  CreateProject:
    Type: AWS::Serverless::Function
    Properties:
      Handler: projectsLambda.create_project
      Runtime: python3.6
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          ELASTIC_HOST: !Ref ESHost
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /project
            Method: post

  DeleteProject:
    Type: AWS::Serverless::Function
    Properties:
      Handler: projectsLambda.delete_project
      Runtime: python3.6
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          ELASTIC_HOST: !Ref ESHost
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /project/{projectId}
            Method: delete
